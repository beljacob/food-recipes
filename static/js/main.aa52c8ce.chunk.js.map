{"version":3,"sources":["images/main-logo.svg","components/Navbar.js","components/SlidingMenu.js","components/Card.js","components/MealModal.js","components/Category.js","components/Showcase.js","components/HamburgerMenu.js","pages/Home.js","pages/Country.js","pages/Create.js","pages/Favourite.js","components/Footer.js","App.js","index.js"],"names":["Navbar","setIsHamburgerClicked","className","to","motion","img","src","Logo","alt","initial","opacity","animate","transition","delay","onClick","SlidingMenu","setMenuCategory","setInputValue","categories","firstCategory","useState","selected","setSelected","firstLiClass","setFirstLiClass","map","category","id","Card","title","area","setClassName","icon","faCubes","style","color","faGlobeEurope","MealModal","mealInfo","setModalVisible","faTimes","size","xmlns","viewBox","fill","fillOpacity","d","strMealThumb","strMeal","strCategory","strArea","strIngredient1","strMeasure1","strIngredient2","strMeasure2","strIngredient3","strMeasure3","strIngredient4","strMeasure4","strIngredient5","strMeasure5","strIngredient6","strMeasure6","strIngredient7","strMeasure7","strIngredient8","strMeasure8","strIngredient9","strMeasure9","strIngredient10","strMeasure10","strIngredient11","strMeasure11","strIngredient12","strMeasure12","strIngredient13","strMeasure13","strIngredient14","strMeasure14","strIngredient15","strMeasure15","strIngredient16","strMeasure16","strIngredient17","strMeasure17","strIngredient18","strMeasure18","strIngredient19","strMeasure19","strIngredient20","strMeasure20","strInstructions","type","width","height","strYoutube","slice","frameBorder","strSource","href","target","rel","Category","inputValue","handleCardClick","modalVisible","categoryMeals","setCategoryMeals","getCategory","fetch","then","response","json","data","meals","forEach","meal","idMeal","prevCategoryMeals","LSMeals","localStorage","getItem","JSON","parse","useEffect","includes","e","Showcase","onChange","value","placeholder","HamburgerMenu","AnimatePresence","div","x","exit","Home","isHamburgerClicked","menuCategory","setMealInfo","searchedMeals","setSearchedMeals","res","classList","contains","parentElement","console","log","Country","Create","Favourite","favMeals","setFavMeals","prevFavMeals","length","Footer","textAlign","padding","marginTop","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa52c8ce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/main-logo.cdfc22f0.svg\";","import '../styles/Navbar.css';\nimport { Link } from 'react-router-dom';\nimport Logo from '../images/main-logo.svg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { motion } from 'framer-motion'\n\n\nconst Navbar = ({ setIsHamburgerClicked }) => {\n\n    return (\n\n        <header>\n            <div className=\"inner-header\">\n                {/* <FontAwesomeIcon\n                    icon={faBars}\n                    size=\"2x\"\n                    className=\"hamburger hidden\"\n                    onClick={() => setIsHamburgerClicked(true)} /> */}\n                <ul className=\"navbar-list\">\n                    {/* <Link to=\"/\"> <li>Home</li> </Link> */}\n                    {/* <Link to=\"/category\"> <li>Categories</li> </Link> */}\n                    {/* <Link to=\"/country\"> <li>Country</li> </Link> */}\n                </ul>\n                <Link to='/' className=\"main-title\">\n                    <h1>Jacob's\n                        <span className=\"main-logo\">\n                            <motion.img src={Logo} alt=\"logo\" initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ delay: 0.3 }} onClick={() => setIsHamburgerClicked(false)} />\n                        </span> Recipes\n                    </h1>\n                </Link>\n                <ul>\n                    {/* <Link to=\"/create\"> <li>Create</li> </Link>\n                    <Link to=\"/favourite\"> <li>Favourites</li> </Link> */}\n                </ul>\n            </div>\n        </header>\n\n    );\n}\n\nexport default Navbar;","import { useState } from 'react';\nimport '../styles/SlidingMenu.css';\n\nconst SlidingMenu = ({ setMenuCategory, setInputValue, categories, firstCategory }) => {\n\n    const [selected, setSelected] = useState(null);\n    const [firstLiClass, setFirstLiClass] = useState('active')\n\n    const handleCategoryClick = (id) => {\n\n        setInputValue('')\n        setSelected(id);\n        setMenuCategory(id)\n    }\n\n    return (\n        <section className=\"sliding-menu-container\">\n            <ul className=\"sliding-menu-ul\">\n\n                <li className={firstLiClass} onClick={() => (setMenuCategory(firstCategory), !firstLiClass ? (setSelected(null), setFirstLiClass('active')) : setFirstLiClass(''))}>{firstCategory}</li>\n                {categories.map(category => <li key={category} className={`category ${ category === selected ? 'active' : '' }`} onClick={() => (handleCategoryClick(category), setFirstLiClass(''))}>{category} </li>)}\n\n            </ul>\n        </section >)\n\n}\n\nexport default SlidingMenu;\n\n\n\n","import '../styles/Card.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faCubes } from '@fortawesome/free-solid-svg-icons';\nimport { faGlobeEurope } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\n\n\n\nconst Card = ({ title, area, category, img, id, onClick, className, setClassName }) => {\n\n    const [heartColor, setHeartColor] = useState('grey')\n\n    // const handleMouseEnter = () => {\n    //     if (heart === faHeart2) {\n    //         setHeart(faHeart)\n    //     } else if (heart === faHeart) {\n    //         setHeart(faHeart2)\n    //     }\n    // }\n    // const handleMouseLeave = () => {\n    //     if (heart === faHeart2) {\n    //         setHeart(faHeart)\n    //     } else if (heart === faHeart) {\n    //         setHeart(faHeart2)\n    //     }\n    // }\n\n    const getMealFromLS = () => {\n        let meals;\n        if (localStorage.getItem('meals') === null) {\n            meals = [];\n        } else {\n            meals = JSON.parse(localStorage.getItem('meals'));\n        }\n        return meals;\n    }\n\n    const addMealToLS = (id) => {\n        const meals = getMealFromLS();\n        //check if id is already in LS\n        if (meals.includes(id)) {\n            return\n        } else {\n            meals.push(id);\n            localStorage.setItem('meals', JSON.stringify(meals));\n        }\n    }\n\n    const removeMealFromLS = (id) => {\n        const meals = getMealFromLS();\n        meals.forEach((meal, index) => {\n            if (meal === id) {\n                meals.splice(index, 1);\n            }\n        });\n        localStorage.setItem('meals', JSON.stringify(meals));\n    }\n\n\n\n    const handleHeartClick = () => {\n        if (heartColor === 'grey') {\n            setHeartColor('pink')\n            addMealToLS(id)\n        } else {\n            setHeartColor('grey')\n            removeMealFromLS(id)\n\n\n\n        }\n\n    }\n\n\n    return (\n\n        <div className=\"card-container\" id={id} onClick={onClick}>\n            <div className=\"card-image\">\n                <img src={img} alt=\"\" />\n            </div>\n            <div className=\"card-info\" id={id}>\n                <div className=\"card-title\"><h3>{title}</h3></div>\n                <div className=\"card-category\"><p><FontAwesomeIcon icon={faCubes} className='icon' style={{ color: '#f54e59' }} />{category}</p></div>\n                <div className=\"card-area\"><p><FontAwesomeIcon icon={faGlobeEurope} className='icon' style={{ color: '#f54e59' }} />{area}</p></div>\n                <div className=\"heart-btn\"></div>\n                {/* <FontAwesomeIcon className={`heart ${ heartColor } ${ className }`} icon={faHeart} size=\"lg\" onClick={(e) => handleHeartClick(e)} /> */}\n\n            </div>\n        </div>\n\n\n    );\n\n}\nexport default Card;","import '../styles/MealModal.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\n\nconst MealModal = ({ mealInfo, setModalVisible }) => {\n\n    return (\n\n        <div className=\"modal-backdrop\">\n\n            <FontAwesomeIcon icon={faTimes} size=\"2x\" className=\"close-btn\" onClick={() => setModalVisible(false)} />\n            <div className=\"modal-container\">\n                <svg className=\"svg-background-modal-top\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n                    <path fill=\"#f54e59\" fillOpacity=\"0.2\" d=\"M0,256L48,224C96,192,192,128,288,90.7C384,53,480,43,576,53.3C672,64,768,96,864,90.7C960,85,1056,43,1152,48C1248,53,1344,107,1392,133.3L1440,160L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"></path>\n                </svg>\n\n                <div className=\"modal-img-container\">\n                    <img src={mealInfo.strMealThumb} alt=\"meal\" />\n                </div>\n                <h2 className=\"meal-title\">{mealInfo.strMeal}</h2>\n                <div className=\"meal-info\">\n                    <span className={`food-icon ${ mealInfo.strCategory }`} title={mealInfo.strCategory}></span><span className={`flag ${ mealInfo.strArea }`} title={mealInfo.strArea}></span>\n                </div>\n                <h3 className=\"ingredients-title\">What You'll Need:</h3>\n                <div className=\"ingredients-container\">\n                    <ul>\n                        {mealInfo.strIngredient1 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient1}</span> <span className=\"measure1\">{mealInfo.strMeasure1}</span></li>}\n                        {mealInfo.strIngredient2 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient2}</span> <span className=\"measure1\">{mealInfo.strMeasure2}</span></li>}\n                        {mealInfo.strIngredient3 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient3}</span> <span className=\"measure1\">{mealInfo.strMeasure3}</span></li>}\n                        {mealInfo.strIngredient4 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient4}</span> <span className=\"measure1\">{mealInfo.strMeasure4}</span></li>}\n                        {mealInfo.strIngredient5 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient5}</span> <span className=\"measure1\">{mealInfo.strMeasure5}</span></li>}\n                        {mealInfo.strIngredient6 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient6}</span> <span className=\"measure1\">{mealInfo.strMeasure6}</span></li>}\n                        {mealInfo.strIngredient7 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient7}</span> <span className=\"measure1\">{mealInfo.strMeasure7}</span></li>}\n                        {mealInfo.strIngredient8 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient8}</span> <span className=\"measure1\">{mealInfo.strMeasure8}</span></li>}\n                        {mealInfo.strIngredient9 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient9}</span> <span className=\"measure1\">{mealInfo.strMeasure9}</span></li>}\n                        {mealInfo.strIngredient10 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient10}</span> <span className=\"measure1\">{mealInfo.strMeasure10}</span></li>}\n                        {mealInfo.strIngredient11 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient11}</span> <span className=\"measure1\">{mealInfo.strMeasure11}</span></li>}\n                        {mealInfo.strIngredient12 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient12}</span> <span className=\"measure1\">{mealInfo.strMeasure12}</span></li>}\n                        {mealInfo.strIngredient13 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient13}</span> <span className=\"measure1\">{mealInfo.strMeasure13}</span></li>}\n                        {mealInfo.strIngredient14 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient14}</span> <span className=\"measure1\">{mealInfo.strMeasure14}</span></li>}\n                        {mealInfo.strIngredient15 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient15}</span> <span className=\"measure1\">{mealInfo.strMeasure15}</span></li>}\n                        {mealInfo.strIngredient16 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient16}</span> <span className=\"measure1\">{mealInfo.strMeasure16}</span></li>}\n                        {mealInfo.strIngredient17 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient17}</span> <span className=\"measure1\">{mealInfo.strMeasure17}</span></li>}\n                        {mealInfo.strIngredient18 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient18}</span> <span className=\"measure1\">{mealInfo.strMeasure18}</span></li>}\n                        {mealInfo.strIngredient19 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient19}</span> <span className=\"measure1\">{mealInfo.strMeasure19}</span></li>}\n                        {mealInfo.strIngredient20 && <li className=\"ingredient\"><span className=\"ingredient1\">{mealInfo.strIngredient20}</span> <span className=\"measure1\">{mealInfo.strMeasure20}</span></li>}\n                    </ul>\n                </div>\n                <h3 className=\"instructions-title\">How To Cook:</h3>\n                <div className=\"instructions-container\">\n                    <p className=\"instructions\">\n                        {mealInfo.strInstructions}\n                    </p>\n                </div>\n                <h3 className=\"buon-appetito\">Buon Appetito!</h3>\n                <div className=\"video\">\n                    <iframe className=\"video\" title=\"video\" id=\"player\" type=\"text/html\" width=\"640\" height=\"390\" src={`https://www.youtube.com/embed/${ mealInfo.strYoutube && mealInfo.strYoutube.slice(32) }`} frameBorder=\"0\"></iframe>\n                </div>\n                <div className=\"recipe-source\">\n                    {mealInfo.strSource && <a href={mealInfo.strSource} target='_blank' rel=\"noreferrer\">Recipe Source</a>}\n                </div>\n                <div className=\"modal-bottom-container\">\n                    <svg className=\"svg-background-modal-bottom\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n                        <path fill=\"#f54e59\" fillOpacity=\"0.2\" d=\"M0,224L48,240C96,256,192,288,288,282.7C384,277,480,235,576,224C672,213,768,235,864,245.3C960,256,1056,256,1152,229.3C1248,203,1344,149,1392,122.7L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path>\n                    </svg>\n                </div>\n            </div>\n\n        </div >\n\n    );\n}\n\nexport default MealModal;","import '../styles/Category.css';\nimport Card from './Card';\nimport { useState, useEffect } from 'react';\nimport MealModal from './MealModal';\n\n\n\nconst Category = ({ inputValue, category, handleCardClick, mealInfo, setModalVisible, modalVisible }) => {\n\n\n\n    const idURL = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=';\n    const categoryBaseURL = 'https://www.themealdb.com/api/json/v1/1/filter.php?c=';\n\n\n    const [categoryMeals, setCategoryMeals] = useState([])\n\n\n    const getMealById = (id) => {\n        setCategoryMeals([])\n        fetch(idURL + id)\n            .then(response => response.json())\n            .then(data => setCategoryMeals(prevCategoryMeals => [...prevCategoryMeals, data])\n            )\n    }\n\n    const getCategory = (category) => {\n        fetch(categoryBaseURL + category)\n            .then(response => response.json())\n            .then(data => data.meals.forEach(meal => getMealById(meal.idMeal)))\n    }\n\n    const getMealFromLS = () => {\n        let meals\n        if (localStorage.getItem('meals') === null) {\n            meals = [];\n        } else {\n            meals = JSON.parse(localStorage.getItem('meals'));\n        }\n        return meals;\n    }\n\n    let LSMeals = getMealFromLS()\n\n    useEffect(() => {\n        getCategory('beef')\n\n    }, [])\n\n    useEffect(() => {\n        if (category) {\n            getCategory(category)\n        }\n    }, [category])\n\n\n\n\n\n\n\n\n\n\n    return (\n\n        <div className='grid'>\n\n            {categoryMeals && !inputValue && categoryMeals.map(meal => <Card className={LSMeals.includes(meal.meals[0].idMeal) ? 'pink' : 'grey'} key={meal.meals[0].idMeal} id={meal.meals[0].idMeal} title={meal.meals[0].strMeal} category={meal.meals[0].strCategory} area={meal.meals[0].strArea} img={meal.meals[0].strMealThumb} onClick={(e) => handleCardClick(e)} />)}\n            {modalVisible && <MealModal setModalVisible={setModalVisible} mealInfo={mealInfo} />}\n        </div>\n\n    );\n}\n\nexport default Category;","import React from \"react\";\n\nconst Showcase = ({ inputValue, setInputValue }) => {\n    return (\n\n        <div className=\"showcase-container\">\n            <h2 className=\"showcase-title\">What are you cooking today?</h2>\n            <div className=\"showcase-input-container\">\n                <input onChange={(e) => setInputValue(e.target.value) && inputValue === ''} type=\"text\" value={inputValue && inputValue} className=\"showcase-input\" placeholder=\"Search your meal...\" />\n            </div>\n        </div>\n\n    );\n}\n\nexport default Showcase;","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { motion, AnimatePresence } from 'framer-motion'\n\n\nconst HamburgerMenu = ({ setIsHamburgerClicked }) => {\n    return (\n\n        <AnimatePresence>\n            <motion.div\n                initial={{ x: '-100%' }}\n                animate={{ x: '0' }}\n                exit={{ x: '-100%' }}\n                className=\"hamburger-menu\" >\n                <FontAwesomeIcon\n                    icon={faTimes}\n                    size=\"2x\"\n                    className=\"flex-end pointer\"\n                    onClick={() => setIsHamburgerClicked(false)} />\n                <ul className=\"hamburger-ul\">\n                    <li><Link to='/' onClick={() => setIsHamburgerClicked(false)}>Home</Link></li>\n                    <li><Link to='/country' onClick={() => setIsHamburgerClicked(false)}>Country</Link></li>\n                    <li><Link to='/create' onClick={() => setIsHamburgerClicked(false)}>Create</Link></li>\n                    <li><Link to='/favourite' onClick={() => setIsHamburgerClicked(false)}>Favourite</Link></li>\n                </ul>\n            </motion.div >\n        </AnimatePresence>\n\n    );\n}\n\nexport default HamburgerMenu;","import '../styles/Home.css';\nimport SlidingMenu from '../components/SlidingMenu';\nimport Card from '../components/Card';\nimport Category from '../components/Category';\nimport { useEffect, useState } from 'react';\nimport Showcase from '../components/Showcase';\nimport HamburgerMenu from '../components/HamburgerMenu';\nimport MealModal from '../components/MealModal'\n\nconst categories = [\n    // 'Beef',\n    'Chicken',\n    'Dessert',\n    'Lamb',\n    'Miscellaneous',\n    'Pasta',\n    'Pork',\n    'Seafood',\n    'Side',\n    'Starter',\n    'Vegan',\n    'Vegetarian',\n    'Breakfast',\n    'Goat'];\n\nconst firstCategory = 'beef'\n\nconst Home = ({ isHamburgerClicked, setIsHamburgerClicked }) => {\n\n    const [inputValue, setInputValue] = useState('')\n    const [menuCategory, setMenuCategory] = useState('')\n    const [modalVisible, setModalVisible] = useState(false)\n    const [mealInfo, setMealInfo] = useState([])\n    const [searchedMeals, setSearchedMeals] = useState([])\n    const [className, setClassName] = useState('grey')\n\n\n    useEffect(() => {\n        fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=' + inputValue)\n            .then(res => res.json())\n            .then(data => setSearchedMeals(data.meals))\n    }, [inputValue])\n\n    const handleCardClick = (e) => {\n        if (e.target.classList.contains('svg-inline--fa') || e.target.parentElement.classList.contains('svg-inline--fa')) {\n            console.log('svg clicked, dont open meal');\n            return\n        } else if (e.target.parentElement.id) {\n            fetch('https://www.themealdb.com/api/json/v1/1/lookup.php?i=' + e.target.parentElement.id)\n                .then(res => res.json())\n                .then(data => setMealInfo(data.meals[0]))\n        } else if (e.target.parentElement.parentElement.id) {\n            fetch('https://www.themealdb.com/api/json/v1/1/lookup.php?i=' + e.target.parentElement.parentElement.id)\n                .then(res => res.json())\n                .then(data => setMealInfo(data.meals[0]))\n        } else if (e.target.parentElement.parentElement.parentElement.id) {\n            fetch('https://www.themealdb.com/api/json/v1/1/lookup.php?i=' + e.target.parentElement.parentElement.parentElement.id)\n                .then(res => res.json())\n                .then(data => setMealInfo(data.meals[0]))\n        }\n        setModalVisible(true)\n    }\n\n    const getMealFromLS = () => {\n        let meals\n        if (localStorage.getItem('meals') === null) {\n            meals = [];\n        } else {\n            meals = JSON.parse(localStorage.getItem('meals'));\n        }\n        return meals;\n    }\n\n    let LSMeals = getMealFromLS()\n\n\n    return (\n\n        <main>\n            <svg className=\"svg-background\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n                <path fill=\"#f54e59\" fillOpacity=\"0.2\" d=\"M0,224L48,240C96,256,192,288,288,282.7C384,277,480,235,576,224C672,213,768,235,864,245.3C960,256,1056,256,1152,229.3C1248,203,1344,149,1392,122.7L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path>\n            </svg>\n\n            {isHamburgerClicked && <HamburgerMenu isHamburgerClicked={isHamburgerClicked} setIsHamburgerClicked={setIsHamburgerClicked} />}\n            <Showcase setInputValue={setInputValue} inputValue={inputValue} />\n            <SlidingMenu setMenuCategory={setMenuCategory} setInputValue={setInputValue} categories={categories} firstCategory={firstCategory} />\n            <Category category={menuCategory} inputValue={inputValue} handleCardClick={handleCardClick} mealInfo={mealInfo} setModalVisible={setModalVisible} modalVisible={modalVisible} />\n            <div className=\"grid\">\n                {searchedMeals && inputValue && searchedMeals.map(meal => (\n                    <Card key={meal.idMeal} id={meal.idMeal} title={meal.strMeal} category={meal.strCategory} area={meal.strArea} img={meal.strMealThumb} onClick={(e) => handleCardClick(e)} />)\n                )}\n            </div>\n            {modalVisible && <MealModal setModalVisible={setModalVisible} mealInfo={mealInfo} />}\n        </main>\n\n    );\n}\n\nexport default Home;","// import { useEffect, useState } from 'react';\n// import '../styles/Country.css';\n// import HamburgerMenu from '../components/HamburgerMenu';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faChevronUp } from '@fortawesome/free-solid-svg-icons'\n// import { faChevronDown } from '@fortawesome/free-solid-svg-icons'\n\n\n// const Country = ({ isHamburgerClicked, setIsHamburgerClicked }) => {\n\n//     const areaBaseURL = 'https://www.themealdb.com/api/json/v1/1/filter.php?a=';\n//     const areasURL = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n//     const idURL = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=';\n\n//     const countries = ['American', 'British', 'Canadian', 'Chinese', 'Croatian', 'Dutch', 'Egyptian', 'French', 'Greek', 'Indian', 'Irish', 'Italian', 'Jamaican', 'Japanese', 'Kenyan', 'Malaysian', 'Mexican', 'Moroccan', 'Polish', 'Portuguese', 'Russian', 'Spanish', 'Thai', 'Tunisian', 'Turkish', 'Unknown', 'Vietnamese']\n\n//     const [areaMeals, setAreaMeals] = useState([])\n//     const [isMenuOpen, setIsMenuOpen] = useState(false)\n\n\n//     const handleClick = () => {\n//         if (isMenuOpen) {\n//             setIsMenuOpen(false)\n//         } else {\n//             setIsMenuOpen(true)\n//         }\n//     }\n\n//     useEffect(() => {\n//         // countries.forEach(country => fetch(areaBaseURL + country)\n//         //     .then(res => res.json())\n//         //     .then(data => setAreaMeals(prevAreaMeals => [...prevAreaMeals, { area: country, data: data }]))\n//         // ) \n//         let arr = []\n//         countries.forEach(country => fetchAPI(country))\n//         async function fetchAPI(country) {\n\n//             let res = await fetch(areaBaseURL + country)\n//             let data = await res.json()\n\n//             arr.push({ country, data })\n//             setAreaMeals(prevAreaMeals => [...prevAreaMeals, { area: country, data: data }])\n\n//         }\n//     }, [])\n\n//     return (\n\n//         <div className=\"country-body\">\n\n//             {isHamburgerClicked && <HamburgerMenu isHamburgerClicked={isHamburgerClicked} setIsHamburgerClicked={setIsHamburgerClicked} />}\n\n//             <div className={`search-country ${ isMenuOpen ? '' : 'not-vis' }`}>\n//                 {/* <input type=\"text\" id=\"search-country-input\" /> */}\n//                 <ul id=\"search-country-ul\">\n//                     {countries && countries.map(country => (\n//                         <li key={country} onClick={() => setIsMenuOpen(false)}><a href={`#${ country }`}>{country}</a></li>\n//                     ))}\n//                 </ul>\n//                 <div className=\"arrow-container\" onClick={handleClick}>\n//                     {isMenuOpen ? <FontAwesomeIcon icon={faChevronUp} size={'lg'} /> : <FontAwesomeIcon icon={faChevronDown} size={'lg'} />}\n//                 </div>\n//             </div>\n\n//             {areaMeals && areaMeals.map(meal => (\n//                 <div key={meal.area} id={meal.area}>\n//                     <div className={`area `}>\n//                         <h3 >{meal.area}</h3>\n//                         <div className={`flag-container ${ meal.area }`}>\n//                         </div>\n//                     </div>\n//                     <div className='country-grid grid'>\n//                         {\n//                             meal.data.meals.map(m => (\n//                                 <div key={m.strMeal} className=\"country-meal-card\">\n//                                     <div className=\"area-meal-img-container\">\n//                                         <img src={m.strMealThumb} alt=\"meal\" />\n//                                     </div>\n//                                     <div className=\"area-meal-info-container\">\n//                                         <h4>{m.strMeal}</h4>\n//                                     </div>\n//                                 </div>\n//                             ))\n//                         }\n//                     </div>\n//                 </div>\n//             ))\n//             }\n//         </div >\n//     );\n// }\n\n// export default Country;\n\n\n\n\n////////////////////////////////////////////\n\n\n// import '../styles/Country.css';\n// import { useEffect, useState } from 'react';\n// import HamburgerMenu from '../components/HamburgerMenu';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faChevronUp } from '@fortawesome/free-solid-svg-icons'\n// import { faChevronDown } from '@fortawesome/free-solid-svg-icons'\n\n\n// const Country = ({ isHamburgerClicked, setIsHamburgerClicked }) => {\n\n//     const countries = ['American', 'British', 'Canadian', 'Chinese', 'Croatian', 'Dutch', 'Egyptian', 'French', 'Greek', 'Indian', 'Irish', 'Italian', 'Jamaican', 'Japanese', 'Kenyan', 'Malaysian', 'Mexican', 'Moroccan', 'Polish', 'Portuguese', 'Russian', 'Spanish', 'Thai', 'Tunisian', 'Turkish', 'Unknown', 'Vietnamese']\n\n//     const [isMenuOpen, setIsMenuOpen] = useState(true)\n\n\n//     const handleArrowClick = () => {\n//         if (isMenuOpen) {\n//             setIsMenuOpen(false)\n//         } else {\n//             setIsMenuOpen(true)\n//         }\n//     }\n\n//     const handleCountryClick = (e) => {\n//         setIsMenuOpen(false)\n//         console.log(e.target.textContent);\n//     }\n\n//     useEffect(() => {\n\n//     }, [])\n\n//     return (\n\n//         <div className=\"country-body\">\n\n//             {isHamburgerClicked && <HamburgerMenu isHamburgerClicked={isHamburgerClicked} setIsHamburgerClicked={setIsHamburgerClicked} />}\n\n//             <div className={`search-country ${ isMenuOpen ? '' : 'not-vis' }`}>\n//                 {/* <input type=\"text\" id=\"search-country-input\" /> */}\n//                 <ul id=\"search-country-ul\">\n//                     {countries && countries.map(country => (\n//                         <li key={country} onClick={(e) => handleCountryClick(e)}><a href={`#${ country }`}>{country}</a></li>\n//                     ))}\n//                 </ul>\n//                 <div className=\"arrow-container\" onClick={handleArrowClick}>\n//                     {isMenuOpen ? <FontAwesomeIcon icon={faChevronUp} size={'lg'} /> : <FontAwesomeIcon icon={faChevronDown} size={'lg'} />}\n//                 </div>\n//             </div>\n\n\n//         </div>\n//     );\n// }\n\n// export default Country;\n\n\n//////////////////////////////////////////////\n\nimport '../styles/Country.css';\nimport HamburgerMenu from '../components/HamburgerMenu';\n\nconst categories = ['British', 'Canadian', 'Chinese', 'Croatian', 'Dutch', 'Egyptian', 'French', 'Greek', 'Indian', 'Irish', 'Italian', 'Jamaican', 'Japanese', 'Kenyan', 'Malaysian', 'Mexican', 'Moroccan', 'Polish', 'Portuguese', 'Russian', 'Spanish', 'Thai', 'Tunisian', 'Turkish', 'Unknown', 'Vietnamese'];\n\nconst firstCategory = 'american';\n\nconst Country = ({ isHamburgerClicked, setIsHamburgerClicked }) => {\n\n\n\n    return (\n\n        <div className=\"country-body\">\n            {isHamburgerClicked && <HamburgerMenu isHamburgerClicked={isHamburgerClicked} setIsHamburgerClicked={setIsHamburgerClicked} />}\n\n        </div>\n\n    );\n}\n\nexport default Country;","import '../styles/Create.css';\nimport HamburgerMenu from '../components/HamburgerMenu';\n\nconst Create = ({ isHamburgerClicked, setIsHamburgerClicked }) => {\n\n    // const categoriesURL = 'https://www.themealdb.com/api/json/v1/1/categories.php';\n\n    // const [categories, setCategories] = useState([])\n\n    // useEffect(() => {\n    //     fetch(categoriesURL)\n    //         .then(response => response.json())\n    //         .then(data => setCategories(prevCategories => [...prevCategories, data.categories]))\n    // }, [])\n\n    return (\n\n        <div>\n            {isHamburgerClicked && <HamburgerMenu isHamburgerClicked={isHamburgerClicked} setIsHamburgerClicked={setIsHamburgerClicked} />}\n\n            {/* <div className=\"create-container\">\n                <h1 className=\"create-title\">Create a Recipe</h1>\n                <form className=\"create-form\">\n                    <div className=\"ingredient-img-container\">\n                    </div>\n                    <input type=\"file\" id=\"upload-img\" />\n                    <label htmlFor=\"title\">Title:</label>\n                    <input type=\"text\" id=\"title\" />\n                    <label htmlFor=\"area\">Area:</label>\n                    <input type=\"text\" id=\"area\" />\n                    <label htmlFor=\"category\">Category:</label>\n                    <select id=\"category custom-select\">\n                        {categories[0] && categories[0].map(category => (\n                            <option className='category-option' key={category.idCategory} value={category.strCategory} >{category.strCategory}</option>\n                        ))}\n                    </select>\n                    <p className=\"ingredients-title\">Ingredients:</p>\n                    <div className=\"ingredients-container\">\n                        <div className=\"ingredient-inputs\">\n\n                            <input type=\"text\" id=\"ingredient-text-input\" placeholder=\"Ingredient\" />\n                            <input type=\"number\" id=\"ingredient-number-input\" placeholder=\"Quantity\" />\n                            <select id=\"ingredient-measure\">\n                                <option value=\"gr\">gr</option>\n                                <option value=\"kg\">kg</option>\n                                <option value=\"oz\">oz</option>\n                                <option value=\"lb\">lb</option>\n                                <option value=\"\"></option>\n                            </select>\n                        </div>\n                        <button className=\"btn add-ingredient\">Add</button>\n                        <ul className=\"ingredients-list\">\n                            <li className=\"ingredient\">ingredient 1 50gr</li>\n                            <li className=\"ingredient\">ingredient 2 20gr</li>\n                        </ul>\n                    </div>\n\n                    <button type=\"submit\">Create</button>\n                </form>\n            </div>\n            <div className=\"my-meals-container\">\n                <h1 className=\"my-meals-title\">My Meals</h1>\n            </div> */}\n        </div>\n    );\n}\n\nexport default Create;","import '../styles/Favourite.css';\nimport HamburgerMenu from '../components/HamburgerMenu';\nimport { useEffect, useState } from 'react/cjs/react.development';\nimport Card from '../components/Card';\nimport MealModal from '../components/MealModal';\n\nconst Favourite = ({ isHamburgerClicked, setIsHamburgerClicked }) => {\n\n    const idURL = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=';\n\n    const [favMeals, setFavMeals] = useState([])\n    const [modalVisible, setModalVisible] = useState(false)\n    const [mealInfo, setMealInfo] = useState([])\n\n\n    const getMealById = (id) => {\n        fetch(idURL + id)\n            .then(response => response.json())\n            .then(data => setFavMeals(prevFavMeals => [...prevFavMeals, data])\n            )\n    }\n\n    const handleCardClick = (e) => {\n        if (e.target.classList.contains('svg-inline--fa') || e.target.parentElement.classList.contains('svg-inline--fa')) {\n            console.log('svg clicked, dont open meal');\n            return\n        } else if (e.target.parentElement.id) {\n            fetch('https://www.themealdb.com/api/json/v1/1/lookup.php?i=' + e.target.parentElement.id)\n                .then(res => res.json())\n                .then(data => setMealInfo(data.meals[0]))\n        } else if (e.target.parentElement.parentElement.id) {\n            fetch('https://www.themealdb.com/api/json/v1/1/lookup.php?i=' + e.target.parentElement.parentElement.id)\n                .then(res => res.json())\n                .then(data => setMealInfo(data.meals[0]))\n        } else if (e.target.parentElement.parentElement.parentElement.id) {\n            fetch('https://www.themealdb.com/api/json/v1/1/lookup.php?i=' + e.target.parentElement.parentElement.parentElement.id)\n                .then(res => res.json())\n                .then(data => setMealInfo(data.meals[0]))\n        }\n        setModalVisible(true)\n    }\n\n    const getMealFromLS = () => {\n        let meals\n        if (localStorage.getItem('meals') === null) {\n            meals = [];\n        } else {\n            meals = JSON.parse(localStorage.getItem('meals'));\n        }\n        return meals;\n    }\n\n    let LSMeals = getMealFromLS()\n\n    useEffect(() => {\n        LSMeals.forEach(meal => getMealById(meal))\n    }, [])\n\n\n\n    return (\n\n        <div>\n            {isHamburgerClicked && <HamburgerMenu isHamburgerClicked={isHamburgerClicked} setIsHamburgerClicked={setIsHamburgerClicked} />}\n            {LSMeals.length === 0 && <h2 className=\"no-meals-alert\">No Favourite Meals</h2>}\n            <div className=\"grid favourite-grid\">\n                {favMeals.map(meal => <Card className={LSMeals.includes(meal.meals[0].idMeal) ? 'pink' : 'grey'} key={meal.meals[0].idMeal} id={meal.meals[0].idMeal} title={meal.meals[0].strMeal} category={meal.meals[0].strCategory} area={meal.meals[0].strArea} img={meal.meals[0].strMealThumb} onClick={(e) => handleCardClick(e)} />)}\n                {modalVisible && <MealModal setModalVisible={setModalVisible} mealInfo={mealInfo} />}\n            </div>\n\n        </div>\n    );\n}\n\nexport default Favourite;","const Footer = () => {\n    return (\n\n        <div>\n            <p className=\"copyright\" style={{ color: 'black', width: '100%', textAlign: 'center', padding: '20px', marginTop: '20px', opacity: 0.8 }}>&copy;2021 - <a href=\"https://github.com/beljacob\" target=\"_blank\" style={{ color: 'black' }}>https://github.com/beljacob</a></p>\n        </div>\n\n    );\n}\n\nexport default Footer;","import './App.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react'\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Country from './pages/Country';\nimport Create from './pages/Create';\nimport Favourite from './pages/Favourite';\nimport Footer from './components/Footer';\n\n\n\nfunction App() {\n\n  const [isHamburgerClicked, setIsHamburgerClicked] = useState(false)\n\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar isHamburgerClicked={isHamburgerClicked} setIsHamburgerClicked={setIsHamburgerClicked} />\n        <div className=\"content\">\n          <Routes>\n            <Route path=\"/\" element={<Home isHamburgerClicked={isHamburgerClicked} setIsHamburgerClicked={setIsHamburgerClicked} />} />\n            {/* <Route path=\"/category\" element={<Category />} /> */}\n            <Route path=\"/country\" element={<Country isHamburgerClicked={isHamburgerClicked} setIsHamburgerClicked={setIsHamburgerClicked} />} />\n            <Route path=\"/create\" element={<Create isHamburgerClicked={isHamburgerClicked} setIsHamburgerClicked={setIsHamburgerClicked} />} />\n            <Route path=\"/favourite\" element={<Favourite isHamburgerClicked={isHamburgerClicked} setIsHamburgerClicked={setIsHamburgerClicked} />} />\n            <Route path=\"/country\" element={<Country isHamburgerClicked={isHamburgerClicked} setIsHamburgerClicked={setIsHamburgerClicked} />} />\n          </Routes>\n        </div>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}